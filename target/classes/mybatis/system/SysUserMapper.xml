<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szhbl.project.system.mapper.SysUserMapper">

	<resultMap type="com.szhbl.project.system.domain.SysUser" id="SysUserResult">
		<id     property="userId"       column="user_id"      />
		<id     property="dcUserId"       column="dc_user_id"      />
		<result property="deptId"       column="dept_id"      />
		<result property="deptCode"       column="deptCode"      />
		<result property="userName"     column="user_name"    />
		<result property="nickName"     column="nick_name"    />
		<result property="email"        column="email"        />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="password"     column="password"     />
		<result property="status"       column="status"       />
		<result property="delFlag"      column="del_flag"     />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<result property="jobNumber"       column="job_number"       />
		<result property="tjrId"       column="tjr_id"       />
		<result property="referenceOtherMails"       column="reference_other_mails"       />
		<result property="referenceType"       column="reference_type"       />
		<result property="kpapplicant"       column="kpapplicant"       />
		<result property="kporganization"       column="kpOrganization"       />
		<result property="kpmerchandiser"       column="kpMerchandiser"       />
		<result property="kpapplydepartment"       column="kpapplydepartment"       />
		<result property="kpdepartmanager"       column="kpdepartmanager"       />
		<association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
		<collection  property="roles"   javaType="java.util.List"        resultMap="RoleResult" />
	</resultMap>


	<resultMap id="deptResult" type="SysDept">
		<id     property="deptId"   column="dept_id"     />
		<result property="parentId" column="parent_id"   />
		<result property="deptCode" column="dept_code"   />
		<result property="deptName" column="dept_name"   />
		<result property="orderNum" column="order_num"   />
		<result property="leader"   column="leader"      />
		<result property="status"   column="dept_status" />
	</resultMap>

	<resultMap id="RoleResult" type="SysRole">
		<id     property="roleId"       column="role_id"        />
		<result property="roleName"     column="role_name"      />
		<result property="roleKey"      column="role_key"       />
		<result property="roleSort"     column="role_sort"      />
		<result property="dataScope"     column="data_scope"    />
		<result property="status"       column="role_status"    />
	</resultMap>

	<sql id="selectUserVo">
        select u.user_id, u.dc_user_id, u.dept_id, u.user_name, u.nick_name , u.email, u.avatar, u.phonenumber, u.password,
        u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,u.job_number,u.reference_other_mails,u.reference_type,u.job_number,u.tjr_id,
        d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status,d.dept_code AS deptCode,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status,
        u.kpapplicant, u.kpOrganization, u.kpMerchandiser, u.kpapplydepartment, u.kpdepartmanager
        from sys_user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>

    <select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
		select
		u.user_id, u.dc_user_id, u.dept_id, u.nick_name, u.user_name, u.email, u.avatar, u.phonenumber, u.password, u.sex,
		u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,u.reference_other_mails,
		u.reference_type,u.tjr_id, u.job_number, d.dept_name, d.leader from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		where u.del_flag = '0'
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
		</if>
		<if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET (#{deptId},ancestors) ))
		</if>

		<if test="jobNumber != null and jobNumber != ''">
			AND u.job_number like concat('%', #{jobNumber}, '%')
		</if>
		<if test="nickName != null and nickName != ''">
			AND u.nick_name like concat('%', #{nickName}, '%')
		</if>
        <if test="referenceType != null and referenceType != ''">
            AND u.reference_type  = #{referenceType}
        </if>
        <if test="tjrId != null and tjrId != ''">
            AND u.tjr_id = #{tjrId}
        </if>
		<!-- 数据范围过滤 -->
		${dataScope}
	</select>

	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.user_name = #{userName} and u.del_flag = '0'
	</select>

	<select id="selectUserById" parameterType="Long" resultType="SysUser">
		 select
		     u.user_id AS "userId",
		     u.dc_user_id AS "dcUserId",
		     u.dept_id AS "deptId",
		     u.user_name AS "userName",
		     u.nick_name AS "nickName",
		     u.email AS "email",
		     u.avatar AS "avatar",
		     u.phonenumber AS "phonenumber",
		     u.password AS "password",
		     u.sex AS "sex",
		     u.status AS "status",
		     u.del_flag AS "delFlag",
		     u.login_ip AS "loginIp",
		     u.login_date AS "loginDate",
		     u.job_number AS "jobNumber",
		     u.reference_other_mails AS "referenceOtherMails",
		     u.reference_type AS "referenceType",
		     u.tjr_id AS tjrId,
		     u.kpapplicant,
		     u.kpOrganization,
		     u.kpMerchandiser,
		     u.kpapplydepartment,
		     u.kpdepartmanager,
		     u.remark,
		     d.dept_code AS deptCode,
		     d.status as dept_status,
		      r.role_id,
		      r.role_name,
		      r.role_key,
		      r.role_sort,
		      r.data_scope,
		      r.status as role_status
        from sys_user u
         left join sys_dept d on u.dept_id = d.dept_id
         left join sys_user_role ur on u.user_id = ur.user_id
		 left join sys_role r on r.role_id = ur.role_id
		where u.user_id = #{userId} and u.del_flag = '0'
	</select>

	<select id="selectUserByTjrId" parameterType="String" resultType="SysUser">
		 select
		     u.user_id AS "userId",
		     u.dc_user_id AS "dcUserId",
		     u.dept_id AS "deptId",
		     u.user_name AS "userName",
		     u.nick_name AS "nickName",
		     u.email AS "email",
		     u.avatar AS "avatar",
		     u.phonenumber AS "phonenumber",
		     u.password AS "password",
		     u.sex AS "sex",
		     u.status AS "status",
		     u.del_flag AS "delFlag",
		     u.login_ip AS "loginIp",
		     u.login_date AS "loginDate",
		     u.job_number AS "jobNumber",
		     u.reference_other_mails AS "referenceOtherMails",
		     u.reference_type AS "referenceType",
		     u.tjr_id AS "tjrId",
		     u.kpapplicant,
		     u.kpOrganization,
		     u.kpMerchandiser,
		     u.kpapplydepartment,
		     u.kpdepartmanager,
		     u.remark,
		     d.dept_code AS "deptCode",
		     d.status as dept_status,
		      r.role_id,
		      r.role_name,
		      r.role_key,
		      r.role_sort,
		      r.data_scope,
		      r.status as role_status
        from sys_user u
         left join sys_dept d on u.dept_id = d.dept_id
         left join sys_user_role ur on u.user_id = ur.user_id
		 left join sys_role r on r.role_id = ur.role_id
		where u.tjr_id = #{tjrId} and u.del_flag = '0' and <![CDATA[ reference_type <> '0' ]]>
	</select>

	<select id="checkUserNameUnique" parameterType="String" resultType="int">
		select count(1) from sys_user where user_name = #{userName} and del_flag = '0'
	</select>

	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phonenumber from sys_user where phonenumber = #{phonenumber} and del_flag = '0'
	</select>

	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email} and del_flag = '0'
	</select>


	<select id="selectReference" parameterType="String" resultMap="SysUserResult">
		select
		user_id,
		email,
		nick_name,
		login_date,
		tjr_id
		from sys_user
		where
		reference_type = '1'
        and status = '0'
	</select>
	<select id="selectUserWithIds" parameterType="String" resultMap="SysUserResult">
		select
		user_id,
		email,
		nick_name,
		login_date
		from sys_user
		where
		user_id in (${_parameter})
		and status = '0'
	</select>


	<!--查询所有跟单员-->
	<select id="selectAllMerchandiser" resultMap="SysUserResult" parameterType="map">
		SELECT
		u.* from
		sys_user u
	  left join sys_dept d on u.dept_id = d.dept_id
	   WHERE d.dept_code like concat('GDB', '%')
		<if test="nickName != null and nickName != ''"> and nick_name LIKE concat('%',#{nickName},'%')</if>
		<if test="jobNumber != null and jobNumber != ''">and job_number like concat('%',#{jobNumber},'%')</if>
		<if test="userName != null and userName != ''">and user_name  like concat('%',#{userName},'%')</if>
	    and u.del_flag = '0'
	</select>

    <!--根据姓名查询跟单员-->
	<select id="selectMerchandiserWithName" resultType="com.szhbl.project.system.VO.SysUserVO" parameterType="string">
		SELECT
		u.dc_user_id as "userId",u.dc_user_id as "dcUserId",u.nick_name AS "nickName",u.job_number AS "jobNumber" from
		sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		WHERE
		d.dept_code like concat('GDB', '%')
		and u.del_flag = '0'
		and u.nick_name = #{name}
	</select>
	<!--根据工号查询跟单员-->
	<select id="selectMerchandiserWithJobNumber" resultType="com.szhbl.project.system.VO.SysUserVO" parameterType="string">
		SELECT
		u.dc_user_id as "userId",u.dc_user_id as "dcUserId",u.nick_name AS "nickName",u.job_number AS "jobNumber" from
		sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		WHERE
		d.dept_code like concat('GDB', '%')
		and u.del_flag = '0'
		and u.job_number = #{jobNumber}
	</select>
	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
 		insert into sys_user(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="dcUserId != null and dcUserId != ''">dc_user_id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="nickName != null and nickName != ''">nick_name,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
			<if test="jobNumber != null and jobNumber != ''">job_number,</if>
			<if test="tjrId != null and tjrId != ''">tjr_id,</if>
		    <if test="referenceOtherMails != null and referenceOtherMails != ''">reference_other_mails,</if>
		    <if test="referenceType != null and referenceType != ''">reference_type,</if>

 			create_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="dcUserId != null and dcUserId != ''">#{dcUserId},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="nickName != null and nickName != ''">#{nickName},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
			<if test="jobNumber != null and jobNumber != ''">#{jobNumber},</if>
			<if test="tjrId != null and tjrId != ''">#{tjrId},</if>
		    <if test="referenceOtherMails != null and referenceOtherMails != ''">#{referenceOtherMails},</if>
		    <if test="referenceType != null and referenceType != ''">#{referenceType},</if>
 			sysdate()
 		)
	</insert>

	<update id="updateUser" parameterType="SysUser">
 		update sys_user
 		<set>
			<if test="dcUserId != null and dcUserId != ''">dc_user_id = #{dcUserId},</if>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
 			<if test="email != null and email != ''">email = #{email},</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber = #{phonenumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
			<if test="jobNumber != null and jobNumber != ''">job_number = #{jobNumber},</if>
			<if test="tjrId != null and tjrId != ''">tjr_id = #{tjrId},</if>
			<if test="referenceOtherMails != null and referenceOtherMails != ''">reference_other_mails = #{referenceOtherMails},</if>
			<if test="referenceType != null and referenceType != ''">reference_type = #{referenceType},</if>
 			update_time = sysdate()
 		</set>
 		where user_id = #{userId}
	</update>

	<update id="updateUserStatus" parameterType="SysUser">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>

	<update id="updateUserAvatar" parameterType="SysUser">
 		update sys_user set avatar = #{avatar} where user_name = #{userName}
	</update>

	<update id="resetUserPwd" parameterType="SysUser">
 		update sys_user set password = #{password} where user_name = #{userName}
	</update>


	<!--更新开票信息-->
	<update id="updateInvoiceInfo" parameterType="SysUser">
		update sys_user
		<set>
		<if test="kpapplicant != null and kpapplicant != ''">kpapplicant = #{kpapplicant},</if>
		<if test="kporganization != null and kporganization != ''">kpOrganization = #{kporganization},</if>
		<if test="kpmerchandiser != null and kpmerchandiser != ''">kpMerchandiser = #{kpmerchandiser},</if>
		<if test="kpapplydepartment != null and kpapplydepartment != ''">kpapplydepartment = #{kpapplydepartment},</if>
		<if test="kpdepartmanager != null and kpdepartmanager != ''">kpdepartmanager = #{kpdepartmanager},</if>
		</set>
		WHERE
		user_id = #{userId}
	</update>

	<delete id="deleteUserById" parameterType="Long">
 		delete from sys_user where user_id = #{userId}
 	</delete>

 	<delete id="deleteUserByIds" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach>
 	</delete>

	<!--售后模块查询业务信息-->
	<select id="selectclientTjr" resultType="com.szhbl.project.customerservice.vo.UserVo" >
		SELECT
		d.leader as leader,
		d.dept_name as name
		from
		sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		WHERE
		u.tjr_id = #{userId}
	</select>

    <select id="selectUserByDcId" parameterType="String" resultType="SysUser">
		 select
		     u.nick_name AS "nickName", u.email AS "email"
        from sys_user u
		where u.dc_user_id = #{dcId} and u.del_flag = '0'
	</select>

	<select id="selectUsersByDcIds" resultMap="SysUserResult">
	    select nick_name, phonenumber, email from sys_user where dc_user_id in
	    <foreach collection="array" item="dcId" open="(" separator="," close=")">
 			#{dcId}
        </foreach>
    </select>
</mapper>
