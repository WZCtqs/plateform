<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szhbl.project.backclient.mapper.RailwayRequirementMapper">

    <resultMap type="RailwayRequirement" id="RailwayRequirementResult">
        <result property="id"    column="id"    />
        <result property="content"    column="content"    />
        <result property="enContent"    column="en_content"    />
        <result property="type"    column="type"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="language"    column="language"    />
    </resultMap>

    <sql id="selectRailwayRequirementVo">
        select id, content, en_content, type, create_by, create_time, update_by, update_time, del_flag, language from railway_requirement
    </sql>

    <select id="selectRailwayRequirementList" parameterType="RailwayRequirement" resultMap="RailwayRequirementResult">
        <include refid="selectRailwayRequirementVo"/>
        <where>
            <if test="content != null  and content != ''"> and content like concat('%', #{content}, '%') </if>
            <if test="enContent != null  and enContent != ''"> and en_content like concat('%', #{enContent}, '%')</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            and del_flag = '0'
        </where>
    </select>
    
    <select id="selectRailwayRequirementById" parameterType="Long" resultMap="RailwayRequirementResult">
        <include refid="selectRailwayRequirementVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertRailwayRequirement" parameterType="RailwayRequirement">
        insert into railway_requirement
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null ">id,</if>
            <if test="content != null  and content != ''">content,</if>
            <if test="enContent != null  and enContent != ''">en_content,</if>
            <if test="type != null  and type != ''">type,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="delFlag != null  and delFlag != ''">del_flag,</if>
            <if test="language != null  and language != ''">language,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null ">#{id},</if>
            <if test="content != null  and content != ''">#{content},</if>
            <if test="enContent != null  and enContent != ''">#{enContent},</if>
            <if test="type != null  and type != ''">#{type},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="delFlag != null  and delFlag != ''">#{delFlag},</if>
            <if test="language != null  and language != ''">#{language},</if>
         </trim>
    </insert>

    <update id="updateRailwayRequirement" parameterType="RailwayRequirement">
        update railway_requirement
        <trim prefix="SET" suffixOverrides=",">
            <if test="content != null  and content != ''">content = #{content},</if>
            <if test="enContent != null  and enContent != ''">en_content = #{enContent},</if>
            <if test="type != null  and type != ''">type = #{type},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="delFlag != null  and delFlag != ''">del_flag = #{delFlag},</if>
            <if test="language != null  and language != ''">language = #{language},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteRailwayRequirementById" parameterType="Long">
        delete from railway_requirement where id = #{id}
    </delete>

    <delete id="deleteRailwayRequirementByIds" parameterType="String">
        delete from railway_requirement where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>